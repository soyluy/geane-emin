{
  "graph": {
    "nodes": {
      "@codebase/users-service-e2e": {
        "name": "@codebase/users-service-e2e",
        "type": "lib",
        "data": {
          "root": "apps/backend/users-service-e2e",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "apps/backend/users-service-e2e",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/out-tsc/@codebase/users-service-e2e/**/*.d.ts",
                "{projectRoot}/out-tsc/@codebase/users-service-e2e/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/backend/users-service-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{projectRoot}/test-output/jest/coverage"
              ],
              "options": {
                "jestConfig": "apps/backend/users-service-e2e/jest.config.ts",
                "passWithNoTests": true
              },
              "dependsOn": [
                "@codebase/users-service:build",
                "@codebase/users-service:serve"
              ],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@codebase/users-service-e2e",
          "tags": [
            "npm:private"
          ],
          "implicitDependencies": [
            "@codebase/users-service"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@codebase/users-service-e2e",
              "isInPackageManagerWorkspaces": true
            }
          }
        }
      },
      "@codebase/users-service": {
        "name": "@codebase/users-service",
        "type": "app",
        "data": {
          "root": "apps/backend/users-service",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "apps/backend/users-service",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/*.tsbuildinfo",
                "{projectRoot}/dist/tsconfig.app.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/backend/users-service",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "webpack-cli"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/apps\\backend\\users-service\\dist"
              ],
              "metadata": {
                "technologies": [
                  "webpack"
                ],
                "description": "Runs Webpack build",
                "help": {
                  "command": "npx webpack-cli build --help",
                  "example": {
                    "options": {
                      "json": "stats.json"
                    },
                    "args": [
                      "--profile"
                    ]
                  }
                }
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/backend/users-service",
                "args": [
                  "node-env=production"
                ],
                "command": "webpack-cli build"
              },
              "configurations": {
                "development": {
                  "args": [
                    "node-env=development"
                  ]
                }
              },
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": [
                "build"
              ],
              "options": {
                "buildTarget": "@codebase/users-service:build",
                "runBuildTargetDependencies": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "@codebase/users-service:build:development"
                },
                "production": {
                  "buildTarget": "@codebase/users-service:build:production"
                }
              },
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "options": {
                "cwd": "apps/backend/users-service",
                "args": [
                  "--node-env=production"
                ],
                "command": "webpack-cli serve"
              },
              "metadata": {
                "technologies": [
                  "webpack"
                ],
                "description": "Starts Webpack dev server in production mode",
                "help": {
                  "command": "npx webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": [
                        "--client-progress",
                        "--history-api-fallback "
                      ]
                    }
                  }
                }
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "dependsOn": [
                "build"
              ],
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects @codebase/users-service --includeDependentProjects -- npx nx build-deps @codebase/users-service"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/backend/users-service",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@codebase/users-service",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "@codebase/users-service",
          "tags": [
            "npm:private"
          ],
          "implicitDependencies": []
        }
      },
      "@geane/shared-persistence": {
        "name": "@geane/shared-persistence",
        "type": "lib",
        "data": {
          "root": "libs/shared-persistence",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "libs/shared-persistence",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/shared-persistence",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/shared-persistence",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@geane/shared-persistence",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@geane/shared-persistence",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "image-metrics-tools": {
        "name": "image-metrics-tools",
        "type": "lib",
        "data": {
          "root": "tools/image-metrics",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "tools/image-metrics",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "image-metrics-tools",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "ready-builder": {
        "name": "ready-builder",
        "type": "lib",
        "data": {
          "root": "tools/ready-builder",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "tools/ready-builder",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "ready-builder",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@geane/shared-types": {
        "name": "@geane/shared-types",
        "type": "lib",
        "data": {
          "root": "libs/shared-types",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts",
                "{projectRoot}/out-tsc/vitest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript",
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "libs/shared-types",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "options": {
                "cwd": "libs/shared-types",
                "command": "vite build"
              },
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "vite"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\dist"
              ],
              "metadata": {
                "technologies": [
                  "typescript",
                  "vite"
                ],
                "description": "Run Vite build",
                "help": {
                  "command": "npx vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                }
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects @geane/shared-types --includeDependentProjects -- npx nx build-deps @geane/shared-types"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/shared-types",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/shared-types",
                "command": "vitest"
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "vitest"
                  ]
                },
                {
                  "env": "CI"
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\vitest\\coverage"
              ],
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite tests",
                "help": {
                  "command": "npx vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "libs/shared-types",
                "command": "vite"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "npx vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "libs/shared-types",
                "command": "vite"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "npx vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "dependsOn": [
                "build"
              ],
              "options": {
                "cwd": "libs/shared-types",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "npx vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@geane/shared-types",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "development": "./src/index.ts",
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "@geane/shared-types",
          "tags": [
            "npm:private"
          ],
          "implicitDependencies": []
        }
      },
      "@geane/middleware": {
        "name": "@geane/middleware",
        "type": "lib",
        "data": {
          "root": "libs/middleware",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/middleware",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/middleware",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "libs/middleware",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "library",
          "name": "@geane/middleware",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@geane/middleware",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "mobile": {
        "name": "mobile",
        "type": "lib",
        "data": {
          "root": "apps/mobile",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "apps/mobile",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.app.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "@nx/expo:start",
              "continuous": true,
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "apps/mobile",
                "args": [
                  "--clear"
                ],
                "command": "expo start --web"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "run-ios": {
              "continuous": true,
              "options": {
                "cwd": "apps/mobile",
                "command": "expo run:ios"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "run-android": {
              "continuous": true,
              "options": {
                "cwd": "apps/mobile",
                "command": "expo run:android"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "export": {
              "options": {
                "cwd": "apps/mobile",
                "args": [
                  "--clear"
                ],
                "command": "expo export"
              },
              "cache": true,
              "dependsOn": [
                "^export"
              ],
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "expo"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/apps/mobile/dist"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "install": {
              "executor": "@nx/expo:install",
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "prebuild": {
              "executor": "@nx/expo:prebuild",
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/expo:build",
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "submit": {
              "options": {
                "cwd": "apps/mobile",
                "command": "eas submit"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects mobile --includeDependentProjects -- npx nx build-deps mobile"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/mobile",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "android": {
              "executor": "nx:run-script",
              "options": {
                "script": "android"
              },
              "metadata": {
                "scriptContent": "expo run:android",
                "runCommand": "npm run android"
              },
              "configurations": {},
              "parallelism": true
            },
            "ios": {
              "executor": "nx:run-script",
              "options": {
                "script": "ios"
              },
              "metadata": {
                "scriptContent": "expo run:ios",
                "runCommand": "npm run ios"
              },
              "configurations": {},
              "parallelism": true
            },
            "build:validator": {
              "executor": "nx:run-script",
              "options": {
                "script": "build:validator"
              },
              "metadata": {
                "scriptContent": "tsx scripts/build-validator-snapshot.ts",
                "runCommand": "npm run build:validator"
              },
              "configurations": {},
              "parallelism": true
            },
            "build:covers": {
              "executor": "nx:run-script",
              "options": {
                "script": "build:covers"
              },
              "metadata": {
                "scriptContent": "tsx scripts/build-category-covers-manifest.ts",
                "runCommand": "npm run build:covers"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "mobile",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "android",
                "ios",
                "build:validator",
                "build:covers"
              ]
            },
            "js": {
              "packageName": "mobile",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@codebase/web": {
        "name": "@codebase/web",
        "type": "app",
        "data": {
          "root": "apps/web",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.app.tsbuildinfo",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts",
                "{projectRoot}/out-tsc/vitest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript",
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/web",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/web",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "apps/web",
                "command": "vitest"
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "vitest"
                  ]
                },
                {
                  "env": "CI"
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\vitest\\coverage"
              ],
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite tests",
                "help": {
                  "command": "npx vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "build": {
              "options": {
                "cwd": "apps/web",
                "command": "vite build"
              },
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "vite"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\dist"
              ],
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite build",
                "help": {
                  "command": "npx vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                }
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "apps/web",
                "command": "vite"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "npx vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/web",
                "command": "vite"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "npx vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "dependsOn": [
                "build"
              ],
              "options": {
                "cwd": "apps/web",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "npx vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects @codebase/web --includeDependentProjects -- npx nx build-deps @codebase/web"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@codebase/web",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "@codebase/web",
          "tags": [
            "npm:private"
          ],
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "@codebase/users-service-e2e": [
        {
          "source": "@codebase/users-service-e2e",
          "target": "@codebase/users-service",
          "type": "implicit"
        }
      ],
      "@codebase/users-service": [
        {
          "source": "@codebase/users-service",
          "target": "@geane/shared-persistence",
          "type": "static"
        },
        {
          "source": "@codebase/users-service",
          "target": "@geane/shared-types",
          "type": "static"
        }
      ],
      "@geane/shared-persistence": [
        {
          "source": "@geane/shared-persistence",
          "target": "@geane/shared-types",
          "type": "static"
        }
      ],
      "image-metrics-tools": [],
      "ready-builder": [],
      "@geane/shared-types": [],
      "@geane/middleware": [],
      "mobile": [],
      "@codebase/web": []
    }
  }
}